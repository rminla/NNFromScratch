apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = 'com.mem'
version = '1.0-SNAPSHOT'

description = "Writing a neural network from scratch"

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations.all {
    resolutionStrategy.cacheChangingModulesFor(0,'seconds')
}

repositories {
    maven { url "http://repo.maven.apache.org/maven2" }
    maven {
        url 'http://dev2.myeyemedia.net:8082/artifactory/mem-local'
        credentials {
            username = "${artifactory_user}"
            password = "${artifactory_password}"
        }
        name = "maven-main-cache"
    }
}

dependencies {

    compile(group: 'com.mem', name: 'mem_common', version: '1.0-SNAPSHOT') { changing = true }
//    compile(group: 'org.nd4j', name: 'nd4j-native-platform', version: '0.9.1')
    compile(group: 'org.nd4j', name: 'nd4j-cuda-8.0-platform', version: '0.9.1')
    compile(group: 'org.nd4j', name: 'nd4j-api', version: '0.9.1')

    testCompile group: 'junit', name: 'junit', version:'4.9'
    testCompile group: 'org.mockito', name: 'mockito-core', version:'1.10.19'
}

jar {
    manifest {
        attributes "Main-Class": "Runner"
    }
}

//usage in our case: gradle -Dfile.encoding=UTF-8 AwsJar
task AwsJar(type: Jar) {
    dependsOn configurations.runtime
    from sourceSets.main.output
    from {
        (configurations.runtime).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    manifest {
        attributes("Manifest-Version": "1.0",
                "Main-Class": "Runner",
                "Class-Path": configurations.compile.collect { it.getName() }.join(' ')
        )
    }
}